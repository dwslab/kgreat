run_id: 0  # ID used for the collective run of all tasks; is used as name for the result folder
log_level: 'DEBUG'  # log level (one of 'INFO', 'DEBUG', ..)
max_cpus: 10  # maximum number of CPUs to be used
gpu: '3'  # index of GPU to use or 'None' if no GPU should be used
format: nt  # file input format (one of: "tsv", "nt", "yago")

mapping:
  'identity':
    type: identity
    target: 'DBpedia16_URI'
    known_entity_files: ['instance_types_en.ttl.bz2', 'mappingbased_objects_en.ttl.bz2']
  'label':
    type: label  # mapper type: label
    input_files: ['labels.ttl', 'labels_en.ttl.bz2']  # files containing labels
    label_predicates: ['http://www.w3.org/2000/01/rdf-schema#label']  # predicates used to retrieve labels
    definitive_matches_only:  False  # set to true if an entity should only be mapped if there is a single exact match to its label
    similarity_threshold: 1.0  # lower threshold of acceptable similarity between labels (set to 1 for exact matches only)
    chunk_size: 1000

preprocessing:
  embeddings:
    input_files: ['infobox-properties.ttl', 'infobox-template-type.ttl', 'template-type.ttl', 'article-categories.ttl', 'instance_types_en.ttl.bz2', 'mappingbased_objects_en.ttl.bz2', 'dbpedia_2016-10.nt']  # list files within the `data` folder that should be used to create embeddings
    models: ['TransE_l1', 'DistMult', 'ComplEx']
    epochs: 1  # number of epochs to train the embedding model for
    batch_size: 30000  # batch size to use on GPU

tasks:  # list of all tasks to be run; check the documentation in the respective task folder (./tasks/*) for details
  'dm-AAUP_classification':
    type: dm-AAUP
    mode: classification
  'dm-AAUP_regression':
    type: dm-AAUP
    mode: regression
  'dm-Cities_classification':
    type: dm-Cities
    mode: classification
  'dm-Cities_regression':
    type: dm-Cities
    mode: regression
  'dm-Forbes_classification':
    type: dm-Forbes
    mode: classification
  'dm-Forbes_regression':
    type: dm-Forbes
    mode: regression
  'dm-MetacriticAlbums_classification':
    type: dm-MetacriticAlbums
    mode: classification
  'dm-MetacriticAlbums_regression':
    type: dm-MetacriticAlbums
    mode: regression
  'dm-MetacriticMovies_classification':
    type: dm-MetacriticMovies
    mode: classification
  'dm-MetacriticMovies_regression':
    type: dm-MetacriticMovies
    mode: regression
  'dm-Cities2000AndCountries_clustering':
    type: dm-Cities2000AndCountries
    mode: clustering
  'dm-CitiesAndCountries_clustering':
    type: dm-CitiesAndCountries
    mode: clustering
  'dm-CitiesMoviesAlbumsCompaniesUni_clustering':
    type: dm-CitiesMoviesAlbumsCompaniesUni
    mode: clustering
  'dm-Teams_clustering':
    type: dm-Teams
    mode: clustering
  'dm-LP50_documentSimilarity':
    type: dm-LP50
    mode: documentSimilarity
  'dm-KORE_entityRelatedness':
    type: dm-KORE
    mode: entityRelatedness
  'dm-AllCapitalCountryEntities_semanticAnalogies':
    type: dm-AllCapitalCountryEntities
    mode: semanticAnalogies
  'dm-CapitalCountryEntities_semanticAnalogies':
    type: dm-CapitalCountryEntities
    mode: semanticAnalogies
  'dm-CityStateEntities_semanticAnalogies':
    type: dm-CityStateEntities
    mode: semanticAnalogies
  'dm-CurrencyEntities_semanticAnalogies':
    type: dm-CurrencyEntities
    mode: semanticAnalogies
  'dm-MovieLens_recommendation':
    type: dm-MovieLens
    mode: recommendation
  'dm-LastFm_recommendation':
    type: dm-LastFm
    mode: recommendation
  'dm-LibraryThing_recommendation':
    type: dm-LibraryThing
    mode: recommendation
